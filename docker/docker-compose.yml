networks:
  infra_net:
    driver: bridge
    ipam:
      config:
        - subnet: "10.0.0.0/24"
          gateway: "10.0.0.1"

services:
  log_service:
    build:
      context: ./log_service
      dockerfile: Dockerfile
    restart: always
    networks:
      infra_net:
    ports:
      - "515:514/udp"   # Gardez ce port, il est nécessaire pour Syslog
      - "8514:8514"     # Gardez ce port pour l'accès spécifique
    volumes:
      - ./logs/syslog.log:/var/log/syslog.log
      - ./log_service/certs:/etc/rsyslog/certs
    environment:
      SOC_IP_1: "10.0.0.80"
      SOC_IP_2: "10.0.1.82"
      SOC_PORT: "6514"

  loki:
    image: grafana/loki:latest
    deploy:
      replicas: 2
    restart: always
    networks:
      infra_net:
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/etc/loki
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:latest
    deploy:
      replicas: 2
    restart: always
    networks:
      infra_net:
    volumes:
      - ./logs:/var/log
      - ./loki/promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml

  grafana:
    image: grafana/grafana:latest
    deploy:
      replicas: 2
    restart: always
    networks:
      infra_net:
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: grafana-loki-datasource
    volumes:
      - grafana_data:/var/lib/grafana

  haproxy:
    image: haproxy:latest
    restart: always
    networks:
      infra_net:
    ports:
      - "8080:80"  # Conserver uniquement ce port pour l'accès web
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg

volumes:
  grafana_data:
  loki_data:
